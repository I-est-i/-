{\rtf1\ansi\ansicpg1251\cocoartf1561\cocoasubrtf610
{\fonttbl\f0\fnil\fcharset0 HelveticaNeue;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red0\green0\blue0;\red212\green213\blue214;
\red212\green213\blue214;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;\csgray\c0\c0;\cssrgb\c86275\c86667\c87059;
\cssrgb\c86275\c86667\c87059;}
\paperw11900\paperh16840\margl1440\margr1440\vieww28300\viewh16280\viewkind0
\deftab720
\pard\pardeftab720\sl360\partightenfactor0

\f0\fs32 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 # \uc0\u1057 \u1076 \u1077 \u1083 \u1072 \u1085 \u1086  \u1074  Visual Studio Code \u1076 \u1083 \u1103  \u1074 \u1082 \
\pard\pardeftab720\sl360\partightenfactor0
\cf2 import requests	\cf2 \cb3 \outl0\strokewidth0 # \uc0\u1042  \u1082 \u1086 \u1085 \u1089 \u1086 \u1083 \u1080  \u1085 \u1091 \u1078 \u1085 \u1086  \u1074 \u1074 \u1077 \u1089 \u1090 \u1080  pip install requests\
\cf2 \cb3 \outl0\strokewidth0 \strokec4 import json 		# \uc0\u1053 \u1077  \u1085 \u1072 \u1076 \u1086 , \u1086 \u1085 \u1086  \u1091 \u1078 \u1077  \u1077 \u1089 \u1090 \u1100 \
import random		# \uc0\u1053 \u1077  \u1085 \u1072 \u1076 \u1086 , \u1086 \u1085 \u1086  \u1091 \u1078 \u1077  \u1077 \u1089 \u1090 \u1100 \
import vk 			\cf2 \cb3 \outl0\strokewidth0 # \uc0\u1042  \u1082 \u1086 \u1085 \u1089 \u1086 \u1083 \u1080  \u1085 \u1091 \u1078 \u1085 \u1086  \u1074 \u1074 \u1077 \u1089 \u1090 \u1080  pip install requests\
\cf2 \cb3 \outl0\strokewidth0 \strokec4 \
def write_json_status(data): 								# \uc0\u1056 \u1072 \u1073 \u1086 \u1090 \u1072 \u1077 \u1090  \u1089 \u1072 \u1084 \u1086 \
	with open('group.json', 'w', encoding='utf-8') as file: \
		json.dump(data, file, indent=2, ensure_ascii=False) \
\
def random_Id(): 					# \uc0\u1069 \u1090 \u1086  \u1075 \u1077 \u1085 \u1077 \u1088 \u1072 \u1090 \u1086 \u1088  \u1088 \u1072 \u1085 \u1076 \u1086 \u1084 \u1085 \u1099 \u1093  \u1095 \u1080 \u1089 \u1077 \u1083  \
	return random.randint(0, 10000) \
\
APP_ID = # \uc0\u1063 \u1090 \u1086 -\u1090 \u1086  \u1089 \u1074 \u1086 \u1105  			\u1053 \u1077 \u1086 \u1073 \u1093 \u1086 \u1076 \u1080 \u1084 \u1086 !\
USER_LOGIN = # \uc0\u1063 \u1090 \u1086 -\u1090 \u1086  \u1089 \u1074 \u1086 \u1105  		\u1051 \u1086 \u1075 \u1080 \u1085  \u1086 \u1090  \u1072 \u1082 \u1082 \u1072 \u1091 \u1085 \u1090 \u1072 \
USER_PASSWORD = # \uc0\u1063 \u1090 \u1086 -\u1090 \u1086  \u1089 \u1074 \u1086 \u1105  	\u1055 \u1072 \u1088 \u1086 \u1083 \u1100  \u1086 \u1090  \u1072 \u1082 \u1082 \u1072 \u1091 \u1085 \u1090 \u1072 \
token = # \uc0\u1063 \u1090 \u1086 -\u1090 \u1086  \u1089 \u1074 \u1086 \u1105  				\u1058 \u1086 \u1082 \u1077 \u1085  \u1085 \u1091 \u1078 \u1085 \u1086  \u1073 \u1088 \u1072 \u1090 \u1100  \u1080 \u1079  \u1074 \u1082 \
\
\
\
session = vk.AuthSession(app_id=APP_ID, user_login=USER_LOGIN, user_password=USER_PASSWORD, scope='messages', access_token=token) 		# \uc0\u1054 \u1073 \u1100 \u1077 \u1076 \u1080 \u1085 \u1077 \u1085 \u1080 \u1077  \u1074 \u1089 \u1077 \u1075 \u1086  \u1082  \u1089 \u1077 \u1089 \u1089 \u1080 \u1080 \
vkapi = vk.API(session) 		# \uc0\u1055 \u1086 \u1076 \u1082 \u1083 \u1102 \u1095 \u1077 \u1085 \u1080 \u1077  \u1089 \u1072 \u1084 \u1086 \u1075 \u1086  \u1074 \u1082  API \u1080  \u1087 \u1088 \u1080 \u1074 \u1103 \u1079 \u1082 \u1072  \u1077 \u1075 \u1086  \u1082  \u1089 \u1077 \u1089 \u1089 \u1080 \u1080 \
\
\
MESSAGE = '\uc0\u1055 \u1088 \u1080 \u1074 \u1077 \u1090 , \u1086 \u1090 \u1087 \u1088 \u1072 \u1074 \u1080 \u1083  \u1101 \u1090 \u1086  \u1089 \u1086 \u1086 \u1073 \u1097 \u1077 \u1085 \u1080 \u1077  \u1095 \u1077 \u1088 \u1077 \u1079  VK API' 		# \u1057 \u1072 \u1084 \u1086  \u1089 \u1086 \u1086 \u1073 \u1097 \u1077 \u1085 \u1080 \u1077 \
\
g = vkapi.messages.send(user_id=188399927, random_id=random_id(), message=MESSAGE) 		#User_id \uc0\u1101 \u1090 \u1086  \u1090 \u1086 \u1090 , \u1082 \u1086 \u1084 \u1091  \u1074 \u1099  \u1086 \u1090 \u1087 \u1088 \u1072 \u1074 \u1083 \u1103 \u1077 \u1090 \u1077  \u1089 \u1086 \u1086 \u1073 \u1097 \u1077 \u1085 \u1080 \u1077 \
write_json_status(g)}